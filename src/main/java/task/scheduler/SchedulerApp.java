/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package task.scheduler;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import task.scheduler.dto.TaskDto;
import task.scheduler.helper.Messages;
import task.scheduler.helper.InputHelper;
import task.scheduler.service.SchedulerService;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

@SpringBootApplication
public class SchedulerApp implements CommandLineRunner {

    private Messages messages;
    private SchedulerService schedulerService;

    public static void main(String[] args) {
        SpringApplication.run(SchedulerApp.class, args);
    }

    @Autowired
    public SchedulerApp(Messages messages,
                        SchedulerService schedulerService) {
        this.messages = messages;
        this.schedulerService = schedulerService;
    }

    @Override
    public void run(String... args) {

        System.out.println(messages.get("scheduler.header"));

        List<TaskDto> scheduler = new ArrayList<>();
        LocalDate startDate = LocalDate.now();

        while (true) {
            System.out.print(messages.get("scheduler.menu"));
            switch (InputHelper.getInput()) {
                case "1":
                    startDate = schedulerService.setStartDate(startDate);
                    break;
                case "2":
                    scheduler = schedulerService.addTask(scheduler, startDate);
                    break;
                case "3":
                    scheduler = schedulerService.removeTask(scheduler);
                    break;
                case "4":
                    if(scheduler.isEmpty()) {
                        System.out.print(messages.get("no.task"));
                    }
                    System.out.println(scheduler.stream().map(Objects::toString).collect(Collectors.joining(" ")));
                    break;
                case "5":
                    if(scheduler.isEmpty()) {
                        System.out.print(messages.get("no.task"));
                    }
                    scheduler = schedulerService.generateSchedule(scheduler);
                    System.out.println(scheduler.stream().map(TaskDto::getSchedule).collect(Collectors.joining(" ")));
                    break;
                case "6":
                    System.out.print(messages.get("help.text"));
                    break;
                case "7":
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid input.");
            }
        }
    }

}
